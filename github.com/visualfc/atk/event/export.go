// export by github.com/goplus/igop/cmd/qexp

package event

import (
	q "github.com/visualfc/atk/event"

	"go/constant"
	"reflect"

	"github.com/goplus/igop"
)

func init() {
	igop.RegisterPackage(&igop.Package{
		Name:       "event",
		Path:       "github.com/visualfc/atk/event",
		Deps:       map[string]string{},
		Interfaces: map[string]reflect.Type{},
		NamedTypes: map[string]reflect.Type{},
		AliasTypes: map[string]reflect.Type{},
		Vars: map[string]reflect.Value{
			"EventList": reflect.ValueOf(&q.EventList),
		},
		Funcs:       map[string]reflect.Value{},
		TypedConsts: map[string]igop.TypedConst{},
		UntypedConsts: map[string]igop.UntypedConst{
			"Activate":             {"untyped string", constant.MakeString(string(q.Activate))},
			"AltUnderlined":        {"untyped string", constant.MakeString(string(q.AltUnderlined))},
			"ButtonPress":          {"untyped string", constant.MakeString(string(q.ButtonPress))},
			"ButtonRelease":        {"untyped string", constant.MakeString(string(q.ButtonRelease))},
			"Circulate":            {"untyped string", constant.MakeString(string(q.Circulate))},
			"CirculateRequest":     {"untyped string", constant.MakeString(string(q.CirculateRequest))},
			"Clear":                {"untyped string", constant.MakeString(string(q.Clear))},
			"Colormap":             {"untyped string", constant.MakeString(string(q.Colormap))},
			"Configure":            {"untyped string", constant.MakeString(string(q.Configure))},
			"ConfigureRequest":     {"untyped string", constant.MakeString(string(q.ConfigureRequest))},
			"Copy":                 {"untyped string", constant.MakeString(string(q.Copy))},
			"Create":               {"untyped string", constant.MakeString(string(q.Create))},
			"Cut":                  {"untyped string", constant.MakeString(string(q.Cut))},
			"Deactivate":           {"untyped string", constant.MakeString(string(q.Deactivate))},
			"Destroy":              {"untyped string", constant.MakeString(string(q.Destroy))},
			"DoubleButtonPress":    {"untyped string", constant.MakeString(string(q.DoubleButtonPress))},
			"Enter":                {"untyped string", constant.MakeString(string(q.Enter))},
			"Expose":               {"untyped string", constant.MakeString(string(q.Expose))},
			"FocusIn":              {"untyped string", constant.MakeString(string(q.FocusIn))},
			"FocusOut":             {"untyped string", constant.MakeString(string(q.FocusOut))},
			"Gravity":              {"untyped string", constant.MakeString(string(q.Gravity))},
			"Invoke":               {"untyped string", constant.MakeString(string(q.Invoke))},
			"KeyPress":             {"untyped string", constant.MakeString(string(q.KeyPress))},
			"KeyRelease":           {"untyped string", constant.MakeString(string(q.KeyRelease))},
			"LASTEvent":            {"untyped int", constant.MakeInt64(int64(q.LASTEvent))},
			"Leave":                {"untyped string", constant.MakeString(string(q.Leave))},
			"LineEnd":              {"untyped string", constant.MakeString(string(q.LineEnd))},
			"LineStart":            {"untyped string", constant.MakeString(string(q.LineStart))},
			"ListboxSelect":        {"untyped string", constant.MakeString(string(q.ListboxSelect))},
			"Map":                  {"untyped string", constant.MakeString(string(q.Map))},
			"MapRequest":           {"untyped string", constant.MakeString(string(q.MapRequest))},
			"MenuSelect":           {"untyped string", constant.MakeString(string(q.MenuSelect))},
			"Modified":             {"untyped string", constant.MakeString(string(q.Modified))},
			"Motion":               {"untyped string", constant.MakeString(string(q.Motion))},
			"MouseWheel":           {"untyped string", constant.MakeString(string(q.MouseWheel))},
			"NextChar":             {"untyped string", constant.MakeString(string(q.NextChar))},
			"NextLine":             {"untyped string", constant.MakeString(string(q.NextLine))},
			"NextPara":             {"untyped string", constant.MakeString(string(q.NextPara))},
			"NextWord":             {"untyped string", constant.MakeString(string(q.NextWord))},
			"Paste":                {"untyped string", constant.MakeString(string(q.Paste))},
			"PasteSelection":       {"untyped string", constant.MakeString(string(q.PasteSelection))},
			"PrevChar":             {"untyped string", constant.MakeString(string(q.PrevChar))},
			"PrevLine":             {"untyped string", constant.MakeString(string(q.PrevLine))},
			"PrevPara":             {"untyped string", constant.MakeString(string(q.PrevPara))},
			"PrevWindow":           {"untyped string", constant.MakeString(string(q.PrevWindow))},
			"PrevWord":             {"untyped string", constant.MakeString(string(q.PrevWord))},
			"Property":             {"untyped string", constant.MakeString(string(q.Property))},
			"Redo":                 {"untyped string", constant.MakeString(string(q.Redo))},
			"Reparent":             {"untyped string", constant.MakeString(string(q.Reparent))},
			"ResizeRequest":        {"untyped string", constant.MakeString(string(q.ResizeRequest))},
			"SelectAll":            {"untyped string", constant.MakeString(string(q.SelectAll))},
			"SelectLineEnd":        {"untyped string", constant.MakeString(string(q.SelectLineEnd))},
			"SelectLineStart":      {"untyped string", constant.MakeString(string(q.SelectLineStart))},
			"SelectNextChar":       {"untyped string", constant.MakeString(string(q.SelectNextChar))},
			"SelectNextLine":       {"untyped string", constant.MakeString(string(q.SelectNextLine))},
			"SelectNextPara":       {"untyped string", constant.MakeString(string(q.SelectNextPara))},
			"SelectNextWord":       {"untyped string", constant.MakeString(string(q.SelectNextWord))},
			"SelectNone":           {"untyped string", constant.MakeString(string(q.SelectNone))},
			"SelectPrevChar":       {"untyped string", constant.MakeString(string(q.SelectPrevChar))},
			"SelectPrevLine":       {"untyped string", constant.MakeString(string(q.SelectPrevLine))},
			"SelectPrevPara":       {"untyped string", constant.MakeString(string(q.SelectPrevPara))},
			"SelectPrevWord":       {"untyped string", constant.MakeString(string(q.SelectPrevWord))},
			"Selection":            {"untyped string", constant.MakeString(string(q.Selection))},
			"TK_LASTEVENT":         {"untyped int", constant.MakeInt64(int64(q.TK_LASTEVENT))},
			"ThemeChanged":         {"untyped string", constant.MakeString(string(q.ThemeChanged))},
			"ToggleSelection":      {"untyped string", constant.MakeString(string(q.ToggleSelection))},
			"TraverseIn":           {"untyped string", constant.MakeString(string(q.TraverseIn))},
			"TraverseOut":          {"untyped string", constant.MakeString(string(q.TraverseOut))},
			"TypeActivateNotify":   {"untyped int", constant.MakeInt64(int64(q.TypeActivateNotify))},
			"TypeButtonPress":      {"untyped int", constant.MakeInt64(int64(q.TypeButtonPress))},
			"TypeButtonRelease":    {"untyped int", constant.MakeInt64(int64(q.TypeButtonRelease))},
			"TypeCirculateNotify":  {"untyped int", constant.MakeInt64(int64(q.TypeCirculateNotify))},
			"TypeCirculateRequest": {"untyped int", constant.MakeInt64(int64(q.TypeCirculateRequest))},
			"TypeClientMessage":    {"untyped int", constant.MakeInt64(int64(q.TypeClientMessage))},
			"TypeColormapNotify":   {"untyped int", constant.MakeInt64(int64(q.TypeColormapNotify))},
			"TypeConfigureNotify":  {"untyped int", constant.MakeInt64(int64(q.TypeConfigureNotify))},
			"TypeConfigureRequest": {"untyped int", constant.MakeInt64(int64(q.TypeConfigureRequest))},
			"TypeCreateNotify":     {"untyped int", constant.MakeInt64(int64(q.TypeCreateNotify))},
			"TypeDeactivateNotify": {"untyped int", constant.MakeInt64(int64(q.TypeDeactivateNotify))},
			"TypeDestroyNotify":    {"untyped int", constant.MakeInt64(int64(q.TypeDestroyNotify))},
			"TypeEnterNotify":      {"untyped int", constant.MakeInt64(int64(q.TypeEnterNotify))},
			"TypeExpose":           {"untyped int", constant.MakeInt64(int64(q.TypeExpose))},
			"TypeFocusIn":          {"untyped int", constant.MakeInt64(int64(q.TypeFocusIn))},
			"TypeFocusOut":         {"untyped int", constant.MakeInt64(int64(q.TypeFocusOut))},
			"TypeGraphicsExpose":   {"untyped int", constant.MakeInt64(int64(q.TypeGraphicsExpose))},
			"TypeGravityNotify":    {"untyped int", constant.MakeInt64(int64(q.TypeGravityNotify))},
			"TypeKeyPress":         {"untyped int", constant.MakeInt64(int64(q.TypeKeyPress))},
			"TypeKeyRelease":       {"untyped int", constant.MakeInt64(int64(q.TypeKeyRelease))},
			"TypeKeymapNotify":     {"untyped int", constant.MakeInt64(int64(q.TypeKeymapNotify))},
			"TypeLeaveNotify":      {"untyped int", constant.MakeInt64(int64(q.TypeLeaveNotify))},
			"TypeMapNotify":        {"untyped int", constant.MakeInt64(int64(q.TypeMapNotify))},
			"TypeMapRequest":       {"untyped int", constant.MakeInt64(int64(q.TypeMapRequest))},
			"TypeMappingNotify":    {"untyped int", constant.MakeInt64(int64(q.TypeMappingNotify))},
			"TypeMotionNotify":     {"untyped int", constant.MakeInt64(int64(q.TypeMotionNotify))},
			"TypeMouseWheelEvent":  {"untyped int", constant.MakeInt64(int64(q.TypeMouseWheelEvent))},
			"TypeNoExpose":         {"untyped int", constant.MakeInt64(int64(q.TypeNoExpose))},
			"TypePropertyNotify":   {"untyped int", constant.MakeInt64(int64(q.TypePropertyNotify))},
			"TypeReparentNotify":   {"untyped int", constant.MakeInt64(int64(q.TypeReparentNotify))},
			"TypeResizeRequest":    {"untyped int", constant.MakeInt64(int64(q.TypeResizeRequest))},
			"TypeSelectionClear":   {"untyped int", constant.MakeInt64(int64(q.TypeSelectionClear))},
			"TypeSelectionNotify":  {"untyped int", constant.MakeInt64(int64(q.TypeSelectionNotify))},
			"TypeSelectionRequest": {"untyped int", constant.MakeInt64(int64(q.TypeSelectionRequest))},
			"TypeUnmapNotify":      {"untyped int", constant.MakeInt64(int64(q.TypeUnmapNotify))},
			"TypeVirtualEvent":     {"untyped int", constant.MakeInt64(int64(q.TypeVirtualEvent))},
			"TypeVisibilityNotify": {"untyped int", constant.MakeInt64(int64(q.TypeVisibilityNotify))},
			"Undo":                 {"untyped string", constant.MakeString(string(q.Undo))},
			"UndoStack":            {"untyped string", constant.MakeString(string(q.UndoStack))},
			"Unmap":                {"untyped string", constant.MakeString(string(q.Unmap))},
			"Visibility":           {"untyped string", constant.MakeString(string(q.Visibility))},
			"WidgetViewSync":       {"untyped string", constant.MakeString(string(q.WidgetViewSync))},
		},
	})
}
